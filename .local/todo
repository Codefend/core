-   display version in cli started
-   parser name to "default"
-   remove the checks to simplify the config (meta object)
-   add colors

generationOptions: {

    /** inputDir: string
     * Folder that should be copied and obfuscated by Codefend.
     * Note: it can be kept "." to clone and obfuscate the entire project
    */
    inputDir: ".",


    /** outputDir: string
     * Folder where Codefend will generate the cloned obfuscated version of the project.
    */
    outputDir: "codefend-output",


    /** outputDir: string []
     * Files/folders that shouldn't be copied by Codefend to the output folder.
    */
    ignoredFilesInGeneration: [
      "codefend-output",
      ".codefendrc.json",
      "node_modules",
      ".git",
      ".github",
      ".gitignore",
      ".vscode",
      "build",
      "dist",
      "README.md"
    ],

},

obfuscationOptions: {

    /** stats: boolean
      * Displays detailed stats about the obfuscated words:
      * e.g:
      * Ignored node_modules (5 times)
      * Predefined l_Hello -> l_Hi (2 times)
      * Encrypted l_a -> Ox0 (15 times)
    */
    stats: true,


    /** prefix: string
    * Prefix of each variable generated by Codefend.
    * Note: the first letter of the prefix must be either an alphabet or "_" so that the variable generated be valid.
    */
    prefix: "Ox",


    /** predefinedWords: Array<{originalWord:string, targetWord:string}>
    * Words that should be obfuscated in a special (determined output)
    * {"originalWord":"l_secretVar" , "targetWord": "123456"}
    * Note: the original word must have a prefix 'l_' or must match the regex to be detected by Codefend in the first place and get replaced.
    */
    predefinedWords: [],


    /** ignoredWords: Array<string>
    * Words that matches the pattern to be obfuscated but should be kept as is without being obfuscated.
    * Useful for words that are being obfuscated and causing errors when running or building the project
    */
    ignoredWords: ["node_modules"],

}
